using CommandLine;
using Manifold.Tiled;
using System;
using System.IO;

namespace TiledToN64
{
    public class Program
    {
        public static void Main(string[] args)
        {
            Parser.Default.ParseArguments<Options>(args)
                .WithParsed(RunOptions);
        }

        public static void RunOptions(Options options)
        {
            if (options.Verbose)
            {
                options.PrintState();
                Console.WriteLine();
            }

            bool fileExists = File.Exists(options.InputPath);
            if (!fileExists)
                throw new FileLoadException($"No file found at path '{options.InputPath}'");

            var map = Map.FromFile(options.InputPath);

            using (var fs = File.Create(options.OutputPath))
                using (var writer = new StreamWriter(fs))
                    WriteCFile(writer, map);
        }

        public static void WriteCFile(StreamWriter writer, Map map)
        {
            // do stuff
            writer.WriteLine("// This code was generated by a tool");
            foreach (var layer in map.Layers)
            {
                writer.WriteLine(layer.Name);

                if (layer.Data == null)
                    continue;

                int iterations = 0;
                foreach (var gid in layer.Data.TileGIDs)
                {
                    writer.Write(gid);
                    writer.Write(',');
                    iterations = (iterations + 1) % 16;
                    if (iterations == 0)
                        writer.WriteLine();
                }
            }
            writer.Flush();        
        }
    }
}